## Base de données plasmides 
- Utilisation de la base de données publi "(im)possibility..." 
- Récupération du fichier Benchmark_perPlasmid.csv pour avoir les numéros d'accessions (gitlab) 
- Téléchargement module Entrez BioPython 

## Simulation données de séquençage
- Grinder, simulation métagénome, gère le paired end  
- Reads "parfaits" : pas d'erreur, pas de chimères 
- Illumina : 2x150pb, insert 350pb, fastq (-fq), 20X, modèle d'abondance : powerlaw 0.1 (plus grand chiffre pour abondance plus forte) 
- PacBio : 6000pb, même modèle d'abondance (VERIFIER que ça a généré le même, sinon faire en sorte de fournir le même !) 
- PacBio : faire une gamme de couverture (0.5X - 1X - 5X - 10X - 15X - 20X par exe) 

## Simulation contamination
- Prendre les génomes desquels viennent les plasmides (voir si y a le fichier), créer données de séquençage avec couverture moins importante (modèle d'abondance?)   
- Peut-être faire varier la contamination 

## Assemblage reads courts 

### MegaHit 
- Fichier paired-end interleaved (--12), paramètres par défaut

### MetaSPAdes 
- Param --meta pour metaSPAdes, --only-assembler (pas d'étapes de correction vu que les reads simulés sont sans erreurs) 

## Assemblage hybride 
- Unicycler 
- MegaMerge 
- (MetaCarvel) 

## Détection plasmides 
- Recycler 
- Plasflow 
- Approche base de données (base de données qu'utilise PlasmidFinder avec réplicons par ex, voir pour d'autres) 

## Evaluation de l'assemblage 
- quast N50 et autre (A FAIRE) 
- estimation des plasmides reconstruits : blastn (VOIR POUR AUTRES ALIGNEURS, bowtie2, minimap, si ça donne pareil) des contigs contre les plasmides de référence. Plasmide estimé reconstruit quand au moins 95% du contig est couvert et 90% du plasmide.

 



  

  


 
